// Generated by CoffeeScript 1.3.3
(function() {
  var Game, Message,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Game = (function(_super) {

    __extends(Game, _super);

    function Game() {
      return Game.__super__.constructor.apply(this, arguments);
    }

    Game.prototype["default"] = {
      name: 'none',
      channel: 'none',
      players: [],
      type: 0,
      typeData: {}
    };

    return Game;

  })(Backbone.Model);

  window.S.Models.Game = Game;

  Message = (function(_super) {

    __extends(Message, _super);

    function Message() {
      return Message.__super__.constructor.apply(this, arguments);
    }

    Message.prototype["default"] = {
      author: "unknowkn",
      sender: 0,
      content: "Hello world",
      time: 0
    };

    return Message;

  })(Backbone.Model);

  window.S.Models.Message = Message;

  /*
  class User extends Backbone.Model
      defaults:
          highscore: 0
  
      initialize: () ->
          @app = @options.app
          @id = @options.id
  
      #connect to the database and check if the user alread exists
      app.connectDb ( err, db ) =>
        db.collection 'users', ( err, users ) =>
          assert.equal null, err
  
          users.findOne query, ( err, user) =>
            assert.equal null, err
  
            #new user, insert into databas
            if user?
              @set registerTime, Date()
  
            #user exists retrieve his data
            else
  
          db.close()
  
  window.S.Models.User = User
  */


}).call(this);
